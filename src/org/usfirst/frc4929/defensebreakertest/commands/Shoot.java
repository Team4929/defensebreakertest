// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4929.defensebreakertest.commands;

import org.usfirst.frc4929.defensebreakertest.Robot;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;

/**
 *
 */
public class Shoot extends Command {
	
    Timer localTimer;
	final double stopSeconds = new Double(2).doubleValue();

    public Shoot() {
        // Use requires() here to declare subsystem dependencies
        requires(Robot.boulderShooter);

        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	localTimer = new Timer();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	try {

	    	localTimer.start();
	
	    	while (!isFinished()) {
	    		Robot.boulderShooter.startShooter();
	    	}
	    	
    	} finally {
        	localTimer.stop();
    	}    	
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() { 

    	if (localTimer.get() >= stopSeconds) {
    		Robot.boulderShooter.kick();
    		return true;
    	} else {
    		return false;
    	}
    }

    // Called once after isFinished returns true
    protected void end() {
    	Robot.boulderShooter.stopShooter();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	this.end();
    }
}
